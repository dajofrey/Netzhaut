#ifndef NH_ECMASCRIPT_PARSER_CST_H
#define NH_ECMASCRIPT_PARSER_CST_H

/**
 * Netzhaut - Web Browser Engine
 * Copyright (C) 2022  Dajo Frey
 * Published under GNU LGPL. See Netzhaut/LICENSE.LGPL file.
 */

#include "Lexer.h"
#include "../Common/Includes.h"
#include <stdlib.h>

/** @addtogroup lib_nh-ecmascript_enums
 *  @{
 */

    // https://tc39.es/ecma262/#prod-ReservedWord
    typedef enum NH_ECMASCRIPT_RESERVED_WORD {
        NH_ECMASCRIPT_RESERVED_WORD_AWAIT,
        NH_ECMASCRIPT_RESERVED_WORD_BREAK, 
        NH_ECMASCRIPT_RESERVED_WORD_CASE,
        NH_ECMASCRIPT_RESERVED_WORD_CATCH, 
        NH_ECMASCRIPT_RESERVED_WORD_CLASS, 
        NH_ECMASCRIPT_RESERVED_WORD_CONST, 
        NH_ECMASCRIPT_RESERVED_WORD_CONTINUE, 
        NH_ECMASCRIPT_RESERVED_WORD_DEBUGGER, 
        NH_ECMASCRIPT_RESERVED_WORD_DEFAULT, 
        NH_ECMASCRIPT_RESERVED_WORD_DELETE, 
        NH_ECMASCRIPT_RESERVED_WORD_DO, 
        NH_ECMASCRIPT_RESERVED_WORD_ELSE, 
        NH_ECMASCRIPT_RESERVED_WORD_ENUM, 
        NH_ECMASCRIPT_RESERVED_WORD_EXPORT, 
        NH_ECMASCRIPT_RESERVED_WORD_EXTENDS, 
        NH_ECMASCRIPT_RESERVED_WORD_FALSE, 
        NH_ECMASCRIPT_RESERVED_WORD_FINALLY, 
        NH_ECMASCRIPT_RESERVED_WORD_FOR, 
        NH_ECMASCRIPT_RESERVED_WORD_FUNCTION, 
        NH_ECMASCRIPT_RESERVED_WORD_IF, 
        NH_ECMASCRIPT_RESERVED_WORD_IMPORT, 
        NH_ECMASCRIPT_RESERVED_WORD_IN, 
        NH_ECMASCRIPT_RESERVED_WORD_INSTANCEOF, 
        NH_ECMASCRIPT_RESERVED_WORD_NEW, 
        NH_ECMASCRIPT_RESERVED_WORD_NULL,
        NH_ECMASCRIPT_RESERVED_WORD_RETURN, 
        NH_ECMASCRIPT_RESERVED_WORD_SUPER, 
        NH_ECMASCRIPT_RESERVED_WORD_SWITCH, 
        NH_ECMASCRIPT_RESERVED_WORD_THIS, 
        NH_ECMASCRIPT_RESERVED_WORD_THROW, 
        NH_ECMASCRIPT_RESERVED_WORD_TRUE, 
        NH_ECMASCRIPT_RESERVED_WORD_TRY, 
        NH_ECMASCRIPT_RESERVED_WORD_TYPEOF, 
        NH_ECMASCRIPT_RESERVED_WORD_VAR, 
        NH_ECMASCRIPT_RESERVED_WORD_VOID, 
        NH_ECMASCRIPT_RESERVED_WORD_WHILE, 
        NH_ECMASCRIPT_RESERVED_WORD_WITH, 
        NH_ECMASCRIPT_RESERVED_WORD_YIELD,
    } NH_ECMASCRIPT_RESERVED_WORD;

    typedef enum NH_ECMASCRIPT_PARSE_NODE {
        NH_ECMASCRIPT_PARSE_NODE_ARRAY_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_ELEMENT_LIST,
        NH_ECMASCRIPT_PARSE_NODE_ADDITIVE_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_ARGUMENTS,
        NH_ECMASCRIPT_PARSE_NODE_ARGUMENT_LIST,
        NH_ECMASCRIPT_PARSE_NODE_ARRAY_BINDING_PATTERN,
        NH_ECMASCRIPT_PARSE_NODE_ARROW_FUNCTION,
        NH_ECMASCRIPT_PARSE_NODE_ASSIGNMENT_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_ASSIGNMENT_OPERATOR,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_ARROW_FUNCTION,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_CONCISE_BODY,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_FUNCTION_BODY,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_FUNCTION_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_FUNCTION_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_GENERATOR_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_ASYNC_GENERATOR_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_ELEMENT,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_ELEMENT_LIST,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_ELISION_ELEMENT,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_IDENTIFIER,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_LIST,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_PATTERN,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_PROPERTY,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_PROPERTY_LIST,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_REST_ELEMENT,
        NH_ECMASCRIPT_PARSE_NODE_BINDING_REST_PROPERTY,
        NH_ECMASCRIPT_PARSE_NODE_BITWISE_AND_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_BITWISE_OR_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_BITWISE_XOR_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_BLOCK,
        NH_ECMASCRIPT_PARSE_NODE_BLOCK_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_BOOLEAN_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_BREAK_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_CALL_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_CASE_BLOCK,
        NH_ECMASCRIPT_PARSE_NODE_CASE_CLAUSE,
        NH_ECMASCRIPT_PARSE_NODE_CASE_CLAUSES,
        NH_ECMASCRIPT_PARSE_NODE_CATCH,
        NH_ECMASCRIPT_PARSE_NODE_CLASS_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_CLASS_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_CONCISE_BODY,
        NH_ECMASCRIPT_PARSE_NODE_CONDITIONAL_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_CONTINUE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_COVER_CALL_EXPRESSION_AND_ASYNC_ARROW_HEAD,
        NH_ECMASCRIPT_PARSE_NODE_COVER_PARENTHESIZED_EXPRESSION_AND_ARROW_PARAMETER_LIST,
        NH_ECMASCRIPT_PARSE_NODE_DEBUGGER_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_DEFAULT_CLAUSE,
        NH_ECMASCRIPT_PARSE_NODE_DO_WHILE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_ELISION,
        NH_ECMASCRIPT_PARSE_NODE_EMPTY_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_EQUALITY_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_EXPONENTIATION_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_EXPORT_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_EXPORT_FROM_CLAUSE,
        NH_ECMASCRIPT_PARSE_NODE_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_EXPRESSION_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_FOR_BINDING,
        NH_ECMASCRIPT_PARSE_NODE_FOR_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_FOR_IN_OF_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_FOR_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_ITERATION_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_BREAKABLE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_FORMAL_PARAMETER,
        NH_ECMASCRIPT_PARSE_NODE_FORMAL_PARAMETER_LIST,
        NH_ECMASCRIPT_PARSE_NODE_FORMAL_PARAMETERS,
        NH_ECMASCRIPT_PARSE_NODE_FUNCTION_BODY,
        NH_ECMASCRIPT_PARSE_NODE_FUNCTION_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_FUNCTION_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_FUNCTION_STATEMENT_LIST,
        NH_ECMASCRIPT_PARSE_NODE_GENERATOR_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_GENERATOR_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_HOISTABLE_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_IDENTIFIER,
        NH_ECMASCRIPT_PARSE_NODE_IDENTIFIER_REFERENCE,
        NH_ECMASCRIPT_PARSE_NODE_IF_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_IMPORT_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_INITIALIZER,
        NH_ECMASCRIPT_PARSE_NODE_LABEL_IDENTIFIER,
        NH_ECMASCRIPT_PARSE_NODE_LABELLED_ITEM,
        NH_ECMASCRIPT_PARSE_NODE_LABELLED_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_LEFT_HAND_SIDE_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_LET_OR_CONST,
        NH_ECMASCRIPT_PARSE_NODE_LEXICAL_BINDING,
        NH_ECMASCRIPT_PARSE_NODE_LEXICAL_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_LOGICAL_AND_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_LOGICAL_OR_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_MEMBER_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_MODULE,
        NH_ECMASCRIPT_PARSE_NODE_MODULE_BODY,
        NH_ECMASCRIPT_PARSE_NODE_MODULE_ITEM,
        NH_ECMASCRIPT_PARSE_NODE_MODULE_ITEM_LIST,
        NH_ECMASCRIPT_PARSE_NODE_MULTIPLICATIVE_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_NAMED_EXPORTS,
        NH_ECMASCRIPT_PARSE_NODE_NEW_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_NULL_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_NUMERIC_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_OBJECT_BINDING_PATTERN,
        NH_ECMASCRIPT_PARSE_NODE_OPTIONAL_CHAIN,
        NH_ECMASCRIPT_PARSE_NODE_OPTIONAL_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_PRIMARY_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_RELATIONAL_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_RETURN_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_SCRIPT,
        NH_ECMASCRIPT_PARSE_NODE_SCRIPT_BODY,
        NH_ECMASCRIPT_PARSE_NODE_SHIFT_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_SHORT_CIRCUIT_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_SPREAD_ELEMENT,
        NH_ECMASCRIPT_PARSE_NODE_SINGLE_NAME_BINDING,
        NH_ECMASCRIPT_PARSE_NODE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_STATEMENT_LIST,
        NH_ECMASCRIPT_PARSE_NODE_STATEMENT_LIST_ITEM,
        NH_ECMASCRIPT_PARSE_NODE_STRING_LITERAL,
        NH_ECMASCRIPT_PARSE_NODE_SWITCH_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_THROW_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_TRY_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_UNARY_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_UPDATE_EXPRESSION,
        NH_ECMASCRIPT_PARSE_NODE_VARIABLE_DECLARATION,
        NH_ECMASCRIPT_PARSE_NODE_VARIABLE_DECLARATION_LIST,
        NH_ECMASCRIPT_PARSE_NODE_VARIABLE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_WHILE_STATEMENT,
        NH_ECMASCRIPT_PARSE_NODE_WITH_STATEMENT,
    } NH_ECMASCRIPT_PARSE_NODE;

/** @} */

/** @addtogroup lib_nh-ecmascript_vars
 *  @{
 */

    extern const char *NH_ECMASCRIPT_RESERVED_WORDS_PP[];
    extern const char *NH_ECMASCRIPT_PARSE_NODE_NAMES_PP[];
    extern size_t NH_ECMASCRIPT_RESERVED_WORDS_PP_COUNT;
    extern size_t NH_ECMASCRIPT_PARSE_NODE_NAMES_PP_COUNT;

/** @} */

/** @addtogroup lib_nh-ecmascript_structs
 *  @{
 */

    typedef struct nh_ecmascript_ParseNode {
        NH_ECMASCRIPT_PARSE_NODE type;
        nh_ecmascript_InputElement *Value_p;
        nh_core_List Children;
    } nh_ecmascript_ParseNode;

    typedef struct nh_ecmascript_ParseResult {
        nh_ecmascript_ParseNode *Node_p;
        nh_core_List SyntaxErrors;
    } nh_ecmascript_ParseResult;

/** @} */

/** @addtogroup lib_nh-ecmascript_functions
 *  @{
 */

    nh_ecmascript_ParseResult nh_ecmascript_parseCST(
        nh_core_Array InputElements, NH_ECMASCRIPT_PARSE_NODE goalSymbol
    );

/** @} */

#endif 
